import 'package:decimal/decimal.dart';
import 'package:flutter_application_2/shared/utils/assets.dart';
import 'package:flutter_application_2/shared/model/cripto_model.dart';

class CryptoRepository {
  List<CriptoModel> getCriptosListRepository() {
    List<CriptoModel> criptosList = [
      CriptoModel(
        name: 'Bitcoin',
        initials: 'BTC',
        price: Decimal.parse('6557'),
        icon: iconBitcoin,
        amount: 65000,
        variation: 0.5,
        historyPrice: [
            [Decimal.parse("102027.62726400001"), 1663545600.0],
            [Decimal.parse("105662.91421679"), 1663459200],
            [Decimal.parse("103993.79695717999"), 1663372800],
            [Decimal.parse("103396.87374000001"), 1663286400],
            [Decimal.parse("104457.86557000001"), 1663200000],
            [Decimal.parse("104724.78130728"), 1663113600],
            [Decimal.parse("114109.78148800002"), 1663027200],
            [Decimal.parse("112377.27581784"), 1662940800],
            [Decimal.parse("111483.07683699999"), 1662854400],
            [Decimal.parse("109991.01359139"), 1662768000],
            [Decimal.parse("100763.28588800001"), 1662681600],
            [Decimal.parse("101257.538652"), 1662595200],
            [Decimal.parse("98608.323729"), 1662508800],
            [Decimal.parse("102047.04982700001"), 1662422400],
            [Decimal.parse("103339.8891"), 1662336000],
            [Decimal.parse("102588.25259550002"), 1662249600],
            [Decimal.parse("103207.96383000002"), 1662163200],
            [Decimal.parse("105533.46300567"), 1662076800],
            [Decimal.parse("103916.197891"), 1661990400],
            [Decimal.parse("101516.875295"), 1661904000],
            [Decimal.parse("102019.01416"), 1661817600],
            [Decimal.parse("98950.33044800001"), 1661731200],
            [Decimal.parse("101441.1882419"), 1661644800],
            [Decimal.parse("102499.1575389"), 1661558400],
            [Decimal.parse("110185.682347"), 1661472000],
            [Decimal.parse("109215.897168"), 1661385600],
            [Decimal.parse("109896.16037400001"), 1661299200],
            [Decimal.parse("110353.917912"), 1661212800],
            [Decimal.parse("111217.33569125002"), 1661126400],
            [Decimal.parse("109239.58289172001"), 1661040000],
            [Decimal.parse("107714.556306"), 1660953600],
            [Decimal.parse("119852.03639"), 1660867200],
            [Decimal.parse("120604.30039041999"), 1660780800],
            [Decimal.parse("122765.54457299999"), 1660694400],
            [Decimal.parse("122845.81078000001"), 1660608000],
            [Decimal.parse("123336.12541800001"), 1660521600],
            [Decimal.parse("124149.30138799998"), 1660435200],
            [Decimal.parse("123940.712112"), 1660348800],
            [Decimal.parse("123519.50872499999"), 1660262400],
            [Decimal.parse("122065.44570999999"), 1660176000],
            [Decimal.parse("118686.39"), 1660089600],
            [Decimal.parse("121738.611456"), 1660003200],
            [Decimal.parse("119726.04289999999"), 1659916800],
            [Decimal.parse("118575.91974618"), 1659830400],
            [Decimal.parse("120475.9538955"), 1659744000],
            [Decimal.parse("117932.13331955999"), 1659657600],
            [Decimal.parse("120611.23089600001"), 1659571200],
            [Decimal.parse("121394.042576"), 1659484800],
            [Decimal.parse("120688.89983385"), 1659398400],
            [Decimal.parse("120562.394888"), 1659312000],
            [Decimal.parse("122327.15032"), 1659225600],
            [Decimal.parse("123049.73875199999"), 1659139200],
            [Decimal.parse("123651.775772"), 1659052800],
            [Decimal.parse("120417.60093000002"), 1658966400],
            [Decimal.parse("113771.94130800001"), 1658880000],
            [Decimal.parse("114183.62386200001"), 1658793600],
            [Decimal.parse("124179.176619"), 1658707200],
            [Decimal.parse("123407.73942256"), 1658620800],
            [Decimal.parse("124738.75952999998"), 1658534400],
            [Decimal.parse("127323.99622075999"), 1658448000],
            [Decimal.parse("127083.89145724001"), 1658361600],
            [Decimal.parse("126695.641362"), 1658275200],
            [Decimal.parse("122001.36686"), 1658188800],
            [Decimal.parse("112472.91753000002"), 1658102400],
            [Decimal.parse("114728.70442885999"), 1658016000],
            [Decimal.parse("112606.943868"), 1657929600],
            [Decimal.parse("111604.755528"), 1657843200],
            [Decimal.parse("109046.81013899998"), 1657756800],
            [Decimal.parse("104977.082509"), 1657670400],
            [Decimal.parse("107266.41621444"), 1657584000],
            [Decimal.parse("109572.250815"), 1657497600],
            [Decimal.parse("113416.36681062999"), 1657411200],
            [Decimal.parse("113425.67253999999"), 1657324800],
            [Decimal.parse("115433.848188"), 1657238400],
            [Decimal.parse("111532.26393799999"), 1657152000],
            [Decimal.parse("108574.243502"), 1657065600],
            [Decimal.parse("107730.177358"), 1656979200],
            [Decimal.parse("102838.32857999999"), 1656892800],
            [Decimal.parse("102519.230773"), 1656806400],
            [Decimal.parse("102664.38006199998"), 1656720000],
            [Decimal.parse("104994.43468437999"), 1656633600],
            [Decimal.parse("104157.88500000001"), 1656547200],
            [Decimal.parse("106697.46334999999"), 1656460800],
            [Decimal.parse("108553.028985"), 1656374400],
            [Decimal.parse("110231.18606499999"), 1656288000],
            [Decimal.parse("112599.65308999999"), 1656201600],
            [Decimal.parse("111272.99515500001"), 1656115200],
            [Decimal.parse("110576.74467055"), 1656028800],
            [Decimal.parse("103742.516643"), 1655942400],
            [Decimal.parse("106093.90430163001"), 1655856000],
            [Decimal.parse("106613.692448"), 1655769600],
            [Decimal.parse("105914.68662600001"), 1655683200],
            [Decimal.parse("97634.3364556"), 1655596800],
          ],
      ),
      CriptoModel(
        name: 'Ethereum',
        initials: 'ETH',
        price: Decimal.parse('7996'),
        icon: iconEthereum,
        amount: 0.94,
        variation: -0.5,
        historyPrice: [],
      ),
      CriptoModel(
        name: 'Litecoin',
        initials: 'LTC',
        price: Decimal.parse('245'),
        icon: iconLitecoin,
        amount: 0.82,
        variation: 0.5,
        historyPrice: [],
      ),
      CriptoModel(
        name: 'Tether',
        initials: 'USDT',
        price: Decimal.parse('290'),
        icon: iconTether,
        amount: 0.3,
        variation: -0.5,
        historyPrice: [],
      ),
      CriptoModel(
        name: 'BNB',
        initials: 'BNB',
        price: Decimal.parse('500.03'),
        icon: iconBnb,
        amount: 0.25,
        variation: -0.5,
        historyPrice: [],
      ),
      CriptoModel(
        name: 'Cardano',
        initials: 'ADA',
        price: Decimal.parse('980.98'),
        icon: iconCardano,
        amount: 1.6,
        variation: -0.5,
        historyPrice: [],
      ),
      CriptoModel(
        name: 'Polkadot',
        initials: 'DOT',
        price: Decimal.parse('33.4'),
        icon: iconPolkadot,
        amount: 2.7,
        variation: 0.5,
        historyPrice: [],
      ),
      CriptoModel(
        name: 'Dogecoin',
        initials: 'DOGE',
        price: Decimal.parse('93.5'),
        icon: iconDogecoin,
        amount: 0.5,
        variation: -0.5,
        historyPrice: [],
      ),
    ];
    return criptosList;
  }
}
